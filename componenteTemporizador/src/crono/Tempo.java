package crono;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.Serializable;
import java.util.Timer;
import java.util.TimerTask;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author zapia
 */
public class Tempo extends javax.swing.JPanel implements Serializable {

    private int s = 0;
    private int m = 0;
    private int h = 0;
    private Timer timer;
    private String tiempo;
    private CronometroListener cronometroListener;
    private String dorsal;

    /**
     * Creates new form Tempo
     */
    public Tempo() {
        initComponents();
        tiempo = "H:" + h + "-m:" + m + "-s:" + s;
        jLabelTiempo.setText(tiempo);
        jLabelTiempo.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                if (cronometroListener != null) {
                    cronometroListener.annadirCorredor(dorsal, s, m, h);
                }
            }

        });
    }

    public int getS() {
        return s;
    }

    public int getM() {
        return m;
    }

    public int getH() {
        return h;
    }

    public String getTiempo() {
        return tiempo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelTiempo = new javax.swing.JLabel();
        jbAccion = new javax.swing.JToggleButton();
        jbReset = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Tiempo:");

        jbAccion.setText("Comenzar!");
        jbAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAccionActionPerformed(evt);
            }
        });

        jbReset.setText("Reiniciar tiempo");
        jbReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbAccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbReset)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void annadirListener(CronometroListener cronoListener) {
        this.cronometroListener = cronoListener;
    }

    private void jbAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAccionActionPerformed

        if (jbAccion.isSelected()) {
            jbAccion.setText("Parar");
            jLabelTiempo.setForeground(new java.awt.Color(95, 211, 114));
            jLabelTiempo.setText(tiempo);
            start();
        } else {
            parar();
            jLabelTiempo.setForeground(Color.red);
            jbAccion.setText("Â¡Comenzar!");
            jLabelTiempo.setText(tiempo);
        }
    }//GEN-LAST:event_jbAccionActionPerformed

    private void jbResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbResetActionPerformed
        s = 0;
        m = 0;
        h = 0;
        tiempo = "H:" + h + "-m:" + m + "-s:" + s;
        jLabelTiempo.setForeground(Color.black);
        jLabelTiempo.setText(tiempo);
    }//GEN-LAST:event_jbResetActionPerformed
    public void start() {
        timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                s++;
                if (s == 60) {
                    s = 0;
                    m++;
                }
                if (m == 60) {
                    m = 0;
                    h++;
                }
                tiempo = "H:" + h + "-m:" + m + "-s:" + s;
                jLabelTiempo.setText(tiempo);
                //System.out.println("H:" + h + "-m:" + m + "-s:" + s);
            }
        }, 0, 1000);

    }

    public void parar() {
        timer.cancel();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelTiempo;
    private javax.swing.JToggleButton jbAccion;
    private javax.swing.JButton jbReset;
    // End of variables declaration//GEN-END:variables
}
